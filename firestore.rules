rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null }
    function isUser(uid) { return isSignedIn() && request.auth.uid == uid }
    function isAdmin() { return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' }

    match /users/{uid} {
      allow read: if isUser(uid) || isAdmin();
      allow write: if isUser(uid) || isAdmin(); // client validates immutable email
    }

    match /bookings/{id} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
    }

    match /rooms/{id} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /settings/{doc} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}